@import "./variable.scss";

// Button main
// @include($main-color, $main-color, $main-fs, 10px, 16px, 4px, 0.4s)
@mixin button($bg-color, $color, $fs, $pd-tb, $pd-lr, $border-rd, $time) {
    cursor: pointer;
    border: none;
    outline: none;
    background-color: $bg-color;
    color: $color;
    font-family: inherit;
    text-transform: uppercase;
    padding: $pd-tb $pd-lr;
    font-size: $fs;
    border-radius: $border-rd;
    transition: all $time linear;
}
// Button Liner
@mixin buttonLinear($color) {
    border: 2px solid $color;
    position: relative;
    isolation: isolate;
    &::before {
        content: "";
        height: 100%;
        width: 0;
        position: absolute;
        top: 0;
        left: 0;
        background-color: $color;
        z-index: -1;
        transition: width 0.4s ease-in;
    }
    &:hover {
        color: white;
    }
    &:hover::before {
        width: 100%;
    }
}
// Button hover
@mixin buttonHover($bg-color, $color-box-shawdow) {
    background-color: $bg-color;
    box-shadow: 0 0 5px $color-box-shawdow, 0 0 25px $color-box-shawdow, 0 0 50px $color-box-shawdow,
        0 0 100px $color-box-shawdow;
}
// Button skew
@mixin buttonSkew($color, $left, $width, $deg) {
    border: 2px solid $color;
    position: relative;
    overflow: hidden;
    &::before {
        content: '';
        position: absolute;
        top: 0;
        left: $left;
        width: $width;
        height: 100%;
        background-color: $color;
        transform: scaleX(0) skew($deg);
        transform-origin: center;
        z-index: -1;
        transition: transform 0.6s ease-in-out;
    }
    &:hover {
        color: white;
    }
    &:hover::before {
        transform: scaleX(1) skewX(45deg);
    }
}
// Swiper button next - prev
@mixin swiperButton($ml, $mr, $br-t, $br-r, $br-b, $br-l, $swiper-button-icon) {
    margin-left: $ml;
    margin-right: $mr;
    border-radius: $br-t $br-r $br-b $br-l;
    &::after {
        content: $swiper-button-icon;
    }
}



//Form item
@mixin formInput($bg-border, $pd-tb, $pd-lr, $br, $fs) {
    outline: none;
    border: 1px solid $bg-border;
    width: 100%;
    display: block;
    // padding: 12px;
    padding: $pd-tb $pd-lr;
    border-radius: $br;
    font-family: inherit;
    font-size: $fs;
}
// Animation button
@mixin buttonAnimation($fs, $pd-tb, $pd-lr, $pc) {
    --body-bg: white;
    --btn-gradient: linear-gradient(to right, #eb3e32, #e31102);
    --btn-txt-color: #ffffff;
    position: relative;
    border: none;
    outline: none;
    display: block;
    border-radius: 5px;
    font-family: inherit !important;
    &:hover {
        cursor: pointer;
        & span:nth-child(4) {
            width: 100%;
            height: 100%;
            border-radius: 5px;
        }
    }
    span {
        display: block;
        &:nth-child(1) {
            // padding: 2rem 6.5rem;
            padding: $pd-tb $pd-lr;
            background-image: var(--btn-gradient);
            border-radius: 4px;
            // border: 1px solid black;
        }
        &:nth-child(2),
        &:nth-child(3),
        &:nth-child(4) {
            position: absolute;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
        }
        &:nth-child(4) {
            width: calc(100% - 16px);
            height: calc(100% - 16px);
            display: flex;
            align-items: center;
            justify-content: center;
            background-image: var(--btn-gradient);
            color: var(--btn-txt-color);
            text-transform: uppercase;
            font-weight: 600;
            font-size: $fs;
            transition: all 0.3s ease;
            border-radius: 1px;
        }
        &:nth-child(3) {
            width: calc(100% - 4px);
            height: calc(100% - 4px);
            background-color: var(--body-bg);
            border-radius: 4px;
        }
        &:nth-child(2) {
            height: 60%;
            // width: 60%;
            width: $pc;
            background-color: var(--body-bg);
            animation: rotate 2s linear infinite;
            // border: 1px solid black;
        }
    }
    @keyframes rotate {
        0% {
            transform: translate(-50%, -50%) rotate(0deg);
        }

        100% {
            transform: translate(-50%, -50%) rotate(180deg);
        }
    }
}
@mixin flexLayout() {
    display: flex;
    align-items: center;
}

@mixin itemHeaderHover($bg, $color) {
    background-color: $bg;
    color: $color;
    transform: scale(1.1);
}

@mixin itemHeaderStyle($border-radius, $border, $border-color, $pd-tb, $pd-lr) {
    border-radius: $border-radius;
    border: $border solid $border-color;
    transition: all 0.4s linear;
    padding: $pd-tb $pd-lr;
}

@mixin keyframesSmooth($time, $opa-1, $opa-2) {
    animation: smooth $time ease-in 1;
    @keyframes smooth {
        0% {
            opacity: $opa-1;
        }
        100% {
            opacity: $opa-2;
        }
    }
}

@mixin titleFooter() {
    padding: 5px;
    color: yellow;
    font-size: 18px;
    margin-bottom: 5px;
}

@mixin itemFooterStyle() {
    transition: all 0.3s linear;
    margin-top: 5px;
    padding: 5px;
}

@mixin itemFooterHover() {
    color: yellow;
    transform: scale(1.1);
}

@mixin keyframesScaleX() {
    animation: scaleX 1.4s linear infinite alternate;
    @keyframes scaleX {
        0% {
            top: 0;
            left: 0;
        }
        20% {
            top: 0;
            left: 50px;
        }
        50% {
            top: 0;
            left: 0;
        }
        75% {
            top: 0;
            left: -50px;
        }
        100% {
            top: 0;
            left: 0;
        }
    }
}
@mixin keyframesSpinner() {
    animation: spinner 5s ease-in-out infinite;
    @keyframes spinner {
        0% {
            transform: rotate(0);
        }
        50% {
            transform: rotate(360deg);
        }
        100% {
            transform: rotate(0);
        }
    }
}

@mixin background-animated() {
    animation: backgroundAnimated 7s linear infinite alternate;
    @keyframes backgroundAnimated {
        0% {
            background-color: $main-color;
        }
        25% {
            background-color: rgb(5, 5, 72);
        }
        50% {
            background-color: rgb(2, 47, 9);
        }
        75% {
            background-color: rgb(207, 10, 79);
        }
        100% {
            background-color: rgba(213, 77, 14, 0.918);
        }
    }
}

@mixin textGradient($color1, $color2) {
    color: transparent;
    background-clip: text;
    -webkit-background-clip: text;
    background-image: linear-gradient(to right, $color1, $color2);
}
// Responsive
// Responsive mixin
// Main lg vs mdd
@mixin responsive_main_lg__() {
    @media #{$res_main_lg__} {
        @content;
    }
}
// Main sm vs xm
@mixin responsive_main_md__() {
    @media #{$res_main_md__} {
        @content;
    }
}

@mixin responsive_main_sm__() {
    @media #{$res_main_sm__} {
        @content;
    }
}

@mixin responsive_main_xm__ {
    @media #{$res_main_xm__} {
        @content;
    }
}
// Large
@mixin responsive_lg() {
    @media #{$res_lg} {
        @content;
    }
}

// Medium
@mixin responsive_md() {
    @media #{$res_md} {
        @content;
    }
}

// Small
@mixin responsive_sm() {
    @media #{$res_sm} {
        @content;
    }
}

// Extra small
@mixin responsive_xm() {
    @media #{$res_xm} {
        @content;
    }
}
// Extra Extra small
@mixin responsive_xxm() {
    @media #{$res_xxm} {
        @content;
    }
}
